[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\usuario\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\usuario\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.3 (AdoptOpenJDK Java 1.8.0_252)
[debug]       Load.loadUnit: plugins took 81.9013ms
[debug]       Load.loadUnit: defsScala took 0.3506ms
[debug] [Loading] Scanning directory C:\Users\usuario\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\usuario\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.0286 ms
[debug]           Load.resolveProject(global-plugins) took 43.7446ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\usuario\.sbt\1.0\plugins, plugins: List(<none>))) took 97.6855ms
[debug] [Loading] Done in C:\Users\usuario\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 242.5649ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3187ms
[debug]     Load.loadUnit(file:/C:/Users/usuario/.sbt/1.0/plugins/, ...) took 332.9683ms
[debug]   Load.apply: load took 513.0178ms
[debug]   Load.apply: resolveProjects took 6.5059ms
[debug]   Load.apply: finalTransforms took 52.9369ms
[debug]   Load.apply: config.delegates took 9.3342ms
[debug]   Load.apply: Def.make(settings)... took 2176.0801ms
[debug]   Load.apply: structureIndex took 81.8846ms
[debug]   Load.apply: mkStreams took 1.4901ms
[info] loading global plugins from C:\Users\usuario\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4197.5095ms
[debug]           Load.loadUnit: plugins took 25.725ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios\project
[debug]             Load.loadUnit: mkEval took 6.7641ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4651 ms
[info] loading settings for project ejercicios-build from idea.sbt ...
[debug]               Load.resolveProject(ejercicios-build) took 16.6632ms
[debug]             Load.loadTransitive: finalizeProject(Project(id ejercicios-build, base: C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios\project, plugins: List(<none>))) took 18.5811ms
[debug] [Loading] Done in C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios\project, returning: (ejercicios-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 133.8092ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.7914ms
[debug]         Load.loadUnit(file:/C:/Users/usuario/Desktop/personal/SCALA/EJERCICIOS/ejercicios/project/, ...) took 166.6778ms
[debug]       Load.apply: load took 168.1459ms
[debug]       Load.apply: resolveProjects took 0.1269ms
[debug]       Load.apply: finalTransforms took 9.3538ms
[debug]       Load.apply: config.delegates took 0.4327ms
[debug]       Load.apply: Def.make(settings)... took 68.0415ms
[debug]       Load.apply: structureIndex took 17.2731ms
[debug]       Load.apply: mkStreams took 0.002ms
[info] loading project definition from C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1239.3981ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios
[debug]       Load.loadUnit: mkEval took 0.3317ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.0524 ms
[info] loading settings for project ejercicios from build.sbt ...
[debug]         Load.resolveProject(ejercicios) took 26.7939ms
[debug]       Load.loadTransitive: finalizeProject(Project(id ejercicios, base: C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios, plugins: List(<none>))) took 29.9002ms
[debug] [Loading] Done in C:\Users\usuario\Desktop\personal\SCALA\EJERCICIOS\ejercicios, returning: (ejercicios)
[debug]     Load.loadUnit: loadedProjectsRaw took 2309.865ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.3676ms
[debug]   Load.loadUnit(file:/C:/Users/usuario/Desktop/personal/SCALA/EJERCICIOS/ejercicios/, ...) took 3561.108ms
[debug] Load.apply: load took 3562.3267ms
[debug] Load.apply: resolveProjects took 0.0702ms
[debug] Load.apply: finalTransforms took 19.0181ms
[debug] Load.apply: config.delegates took 0.2905ms
[debug] Load.apply: Def.make(settings)... took 58.2729ms
[debug] Load.apply: structureIndex took 20.7834ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to ejercicios (in build file:/C:/Users/usuario/Desktop/personal/SCALA/EJERCICIOS/ejercicios/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 52528 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 52528, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to ejercicios (in build file:/C:/Users/usuario/Desktop/personal/SCALA/EJERCICIOS/ejercicios/)
[debug] > Exec(idea-shell, None, None)
